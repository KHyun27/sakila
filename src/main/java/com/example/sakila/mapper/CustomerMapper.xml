<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.CustomerMapper">

	<!-- insertCustomer Query : 고객 추가 -->
	<insert id="insertCustomer" parameterType="com.example.sakila.vo.Customer">
		INSERT INTO customer(store_id, first_name, last_name, email, address_id, create_date) VALUES(#{storeId}, #{firstName}, #{lastName}, #{email}, #{addressId}, now())
	</insert>

	<!-- selectCustomerList Query : 고객 리스트 조회 -->
	<select id="selectCustomerList" parameterType="Map" resultType="com.example.sakila.vo.Customer">
		SELECT customer_id customerId, store_id storeId, first_name firstName, last_name lastName, address_id addressId, email, create_date createDate, last_update lastUpdate, active
		FROM customer
		<where>
	        <if test="searchWord != null and searchWord != ''">
	            first_name LIKE CONCAT('%', #{searchWord}, '%') OR last_name LIKE CONCAT('%', #{searchWord}, '%')
	        </if>
	    </where>
		ORDER BY customer_id DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- selectCustomerCount Query : 고객 리스트 페이징을 위한 갯수 조회 (searchWord) -->
	<select id="selectCustomerCount" parameterType="String" resultType="Integer">
		SELECT COUNT(*) FROM customer
		<where>
			<if test="searchWord != null">
				LOWER(CONCAT(first_name, last_name)) LIKE CONCAT('%', LOWER(#{searchName}) , '%')
			</if>
		</where>		
	</select>

	<!-- selectCustomerListByName Query : /on/addRental -->
	<select id="selectCustomerListByName" parameterType="String" resultType="com.example.sakila.vo.Customer">
		SELECT customer_id customerId, store_id storeId, first_name firstName, last_name lastName, email email FROM customer 
		WHERE ACTIVE = 1 AND LOWER(CONCAT(first_name, last_name)) LIKE CONCAT('%', LOWER(#{searchName}) , '%')
	</select>
	
	<!-- selectCustomerOne Query : 고객 정보 조회 -->
	<select id="selectCustomerOne" parameterType="Integer" resultType="Map">
		SELECT cu.customer_id customerId, cu.store_id storeId, sa.storeAddress storeAddress, cu.first_name firstName, cu.last_name lastName,
			   cu.email email, cu.active active, cu.create_date createDate, cu.last_update lastUpdate, 
			   a.address address, a.address2 address2, a.district district, ci.city city, a.postal_code postalCode, a.phone phone, co.country country
		FROM customer cu INNER JOIN address a ON cu.address_id = a.address_id INNER JOIN city ci ON a.city_id = ci.city_id INNER JOIN country co ON ci.country_id = co.country_id INNER JOIN (SELECT s.store_id, a.address storeAddress FROM store s INNER JOIN address a ON s.address_id = a.address_id) sa ON cu.store_id = sa.store_id
		WHERE cu.customer_id = #{customerId}
	</select>
	
	<!-- selectRentalListByCustomer Query : 고객 별 Rental List 조회 -->
	<select id="selectRentalListByCustomer" parameterType="Integer" resultType="Map">
		SELECT r.inventory_id inventoryId, r.rental_date rentalDate, r.return_date returnDate, st.username username, f.film_id filmId, f.title title
		FROM customer cu INNER JOIN rental r ON cu.customer_id = r.customer_id INNER JOIN staff st ON r.staff_id = st.staff_id INNER JOIN inventory i ON r.inventory_id = i.inventory_id INNER JOIN film f ON i.film_id = f.film_id
		WHERE cu.customer_id = #{customerId}
	</select>
</mapper>