<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.InventoryMapper">

	<!-- selectCountInventoryByFilm Query - /on/removeFilm : Film을 지우기 위해 filmId inventory count 조회 -->
	<select id="selectCountInventoryByFilm" parameterType="Integer">
		SELECT COUNT(*) FROM inventory WHERE film_id = #{filmId}
	</select>
	
	<!-- selectInventoryListByStore Query : Inventory List 조회 -->
	<!-- 추가 수정 : film x rental x payment x customer 조인필요 -->
	<select id="selectInventoryListByStore" parameterType="Map" resultType="Map" >
		SELECT t1.inventory_id inventoryId, t1.film_id filmId, t1.title title, t1.last_update lastUpdate, t2.customer_id customerId, IFNULL(t2.rental_date, '대여가능') rentalDate
		FROM (SELECT i.inventory_id, i.film_id, f.title, i.last_update, i.store_id FROM inventory i INNER JOIN film f ON i.film_id = f.film_id) t1 
		LEFT OUTER JOIN (SELECT inventory_id, customer_id, rental_date FROM rental WHERE return_date IS NULL) t2
		ON t1.inventory_id = t2.inventory_id
		WHERE t1.store_id = #{storeId}
		ORDER BY t1.inventory_id DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- insertInventory Query : Inventory에 Film 추가 -->
	<insert id="insertInventory" parameterType="com.example.sakila.vo.Inventory">
		INSERT INTO inventory(film_id, store_id) VALUES(#{filmId}, #{storeId});
	</insert>
	
	<!-- deleteInventoryByKey Query : Inventory 삭제 -->
	<delete id="deleteInventoryByKey" parameterType="Integer">
		DELETE FROM inventory WHERE inventory_id = #{inventoryId}
	</delete>
	
	<!-- selectFilmByInventoryId Query : addRental → filmTitle 조회 -->
	<select id="selectFilmByInventoryId" parameterType="Integer" resultType="Map">
		SELECT i.film_id filmId, f.title title FROM inventory i INNER JOIN film f ON i.film_id = f.film_id WHERE inventory_id = #{inventoryId}
	</select>
</mapper>