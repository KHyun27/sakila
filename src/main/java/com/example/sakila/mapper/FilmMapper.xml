<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.FilmMapper">

	<!-- selectFileTitleListByActor Query -->
	<select id="selectFilmTitleListByActor" parameterType="Map" resultType="com.example.sakila.vo.Film">
		SELECT f.film_id filmId, f.title title 
		FROM film_actor fa INNER JOIN film f ON fa.film_id = f.film_id
		WHERE fa.actor_id = #{actorId}
		ORDER BY f.film_id ASC LIMIT #{filmListBeginRow}, #{filmListRowPerPage}
	</select>
	
	<!-- selectFilmOne Query - /Get:/on/filmOne, /Get:/on/modifyFilm -->
	<select id="selectFilmOne" parameterType="int" resultType="Map">
		SELECT fi.film_id filmId, fi.title title, fi.description description, fi.release_year releaseYear, fi.rental_duration rentalDuration, 
			   fi.rental_rate rentalRate, fi.length length, fi.replacement_cost replacementCost,
			   fi.rating rating, fi.special_features specialFeatures, fi.last_update lastUpdate, 
			   fi.original_language_id originalLanguageId, la.name language, ol.name originalLanguage
		FROM film fi INNER JOIN language la
		ON fi.language_id = la.language_id LEFT OUTER JOIN language ol ON fi.original_language_id = ol.language_id
		WHERE film_id = #{filmId}
	</select>
	
	
	
	<!-- insertFilm Query -->
	<insert id="insertFilm" parameterType="com.example.sakila.vo.Film">
		INSERT INTO film(title, description, release_year, language_id, original_language_id, rental_duration, rental_rate, length
			, replacement_cost, rating, special_features
		) VALUES (#{title}, #{description}, #{releaseYear}, #{languageId}, #{originalLanguageId}, #{rentalDuration}, #{rentalRate}, #{length}
			, #{replacementCost}, #{rating}, #{specialFeatures})
	</insert>

	<!-- selectFilmListByTitle Query -->
	<select id="selectFilmListByTitle" parameterType="String" resultType="com.example.sakila.vo.Film">
		SELECT film_id filmId, title FROM film WHERE title LIKE CONCAT('%',#{searchTitle},'%')
	</select>
	
	<!-- selectFilmList Query : category가 0이나 null -->
	<select id="selectFilmList" parameterType="Map" resultType="Map">
		SELECT f.film_id filmId, f.title title, c.name category, f.release_year releaseYear, 
						f.rental_duration rentalDuration, f.rental_rate rentalRate,
						f.length length, f.replacement_cost replacementCost, f.rating rating
		FROM film f LEFT OUTER JOIN film_category fc ON f.film_id = fc.film_id
		LEFT OUTER JOIN category c ON fc.category_id = c.category_id 
		ORDER BY f.film_id DESC LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- selectFilmListByCategory Query : 카테고리가 선택 되었을 때 filmList null이나 0이 아닐 때 -->
	<select id="selectFilmListByCategory" parameterType="Map" resultType="Map">
		SELECT f.film_id filmId, f.title title, c.name category, f.release_year releaseYear, 
						f.rental_duration rentalDuration, f.rental_rate rentalRate,
						f.length length, f.replacement_cost replacementCost, f.rating rating
		FROM film f LEFT OUTER JOIN film_category fc ON f.film_id = fc.film_id
		INNER JOIN category c ON fc.category_id = c.category_id 
		WHERE fc.category_id = #{categoryId} ORDER BY f.film_id DESC LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- selectFilmCount Query : FilmList의 갯수 (카테고리 있을때, 없을때) -->
	<select id="selectFilmCount" parameterType="int" resultType="int">
    <choose>
        <when test="categoryId == null">
            SELECT COUNT(*) FROM film
        </when>
        <otherwise>
            SELECT COUNT(*) FROM film_category WHERE category_id = #{categoryId}
        </otherwise>
    </choose>
	</select>
	
	<!-- deleteFilmByKey Query : Film 삭제 -->
	<delete id="deleteFilmByKey" parameterType="Integer">
		DELETE FROM film WHERE film_id = #{filmId}
	</delete>
	
	<!-- updateFilm - Post : /on/modifyFilm : Film 수정 -->
	<update id="updateFilm" parameterType="com.example.sakila.vo.Film">
		UPDATE film
			<set>
				<if test="title != null and title != ''">title = #{title},</if>
				<if test="description != null and description != ''">description = #{description},</if>
				<if test="releaseYear != null and releaseYear != ''">release_year = #{releaseYear},</if>
				<if test="languageId != null and languageId != ''">language_id = #{languageId},</if>
				<if test="originalLanguageId != null and originalLanguageId != ''">original_language_id = #{originalLanguageId},</if>
				<if test="rentalDuration != null and rentalDuration != ''">rental_duration = #{rentalDuration},</if>
				<if test="rentalRate != null and rentalRate != ''">rental_rate = #{rentalRate},</if>
				<if test="length != null and length != ''">length = #{length},</if>
				<if test="replacementCost != null and replacementCost != ''">replacement_cost = #{replacementCost},</if>
				<if test="rating != null and rating != ''">rating = #{rating},</if>
				<!-- specialFeatures 처리 -->
		        <if test="specialFeatures != null">special_features = #{specialFeatures},</if>
		        <if test="specialFeatures == null">special_features = null,</if>
			</set>
		WHERE film_id = #{filmId}
	</update>

</mapper>